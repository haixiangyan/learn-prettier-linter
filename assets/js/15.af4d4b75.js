(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{417:function(t,s,a){"use strict";a.r(s);var n=a(35),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"🤥-lintstaged-x-tsc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🤥-lintstaged-x-tsc"}},[t._v("#")]),t._v(" 🤥 LintStaged x TSC")]),t._v(" "),a("p",[t._v("我相信大多数人是不太了解 "),a("code",[t._v("tsc")]),t._v("。"),a("code",[t._v("tsc")]),t._v(" 本身是一个编译工具，它主要工作是将 "),a("code",[t._v(".ts")]),t._v(" 转换为 "),a("code",[t._v(".js")]),t._v(" 文件，但是大多数项目在打包时都会用 "),a("code",[t._v("babel")]),t._v(" 来处理了，所以也就没 "),a("code",[t._v("tsc")]),t._v(" 什么事了，大家也很少会用到。")]),t._v(" "),a("p",[t._v("回到我们项目，刚刚的配置为什么有问题呢？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'**/*.{ts,tsx}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查 TypeScript")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'**/*.{js,jsx}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.vue"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.{css,less}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"tsc-的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tsc-的参数"}},[t._v("#")]),t._v(" tsc 的参数")]),t._v(" "),a("p",[t._v("这里单单一个 "),a("code",[t._v("tsc")]),t._v(" 是不够的，因为我们需要的是只检查类型，但不输出，所以要加一个 "),a("code",[t._v("--noEmit")]),t._v(" 参数，同时也不要去检查 node_modules 里的类型，要加 "),a("code",[t._v("--skipLibCheck")]),t._v(" 参数。完整的命令为 "),a("code",[t._v("tsc --noEmit --skipLibCheck")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'**/*.{ts,tsx}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsc --noEmit --skipLibCheck"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查 TypeScript")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("但是如果我们有这样的 "),a("code",[t._v(".ts")]),t._v(" 文件：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// messyTS.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hello"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Hello "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("以及对应的 "),a("code",[t._v(".d.ts")]),t._v(" 类型声明文件：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// messyTypes.d.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然后我们 "),a("strong",[t._v("只在 "),a("code",[t._v("messyTS.ts")]),t._v(" 做了改动并提交，")]),t._v(" 这条命令在 "),a("code",[t._v("lint-staged")]),t._v(" 调用时会报下面的错误：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b1c0fd9f450e45fc8e24572506ef05f3~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),t._v(" "),a("p",[t._v("报错里说的是找不到 "),a("code",[t._v("Hello")]),t._v(" 这个 interface。但是我们在写项目的时候，IDE 都会自动找到这个类型声明文件的呀，为什么这样就不行了呢？")]),t._v(" "),a("p",[t._v("这是因为 IDE 会自动读取读 "),a("code",[t._v("tsconfig.json")]),t._v(" 文件，而这里 "),a("code",[t._v("tsc")]),t._v(" 命令没有读取 "),a("code",[t._v("tsconfig.json")]),t._v(" 导致找不到 "),a("code",[t._v("Hello")]),t._v(" 这个 interface。那么，很自然我们就会想是否可以 "),a("code",[t._v("tsc -p tsconfig.json --noEmit --skipLibCheck")]),t._v(" 这样写呢？"),a("strong",[t._v("抱歉，依然报错：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e6fd478cf9ff497885c4bc72dfaaad4f~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("他奶奶地！为什么会报错？！")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8a6be60386b446eda6ea3ff02545c18c~tplv-k3u1fbpfcp-watermark.image?",alt:""}}),t._v("\n这是因为 "),a("code",[t._v("tsc")]),t._v(" 只有两种调用方式：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("tsc -p tsconfig.json")]),t._v("：直接加载 "),a("code",[t._v("tsconfig.json")]),t._v(" 时，会编译 "),a("code",[t._v("tsconfig.json")]),t._v(" 里 "),a("code",[t._v("include")]),t._v(" 的文件")]),t._v(" "),a("li",[a("code",[t._v("tsc xxx.ts")]),t._v("：直接编译命令行里写的 TS 文件，但是会自动忽略 "),a("code",[t._v("tsconfig.json")])])]),t._v(" "),a("p",[a("strong",[t._v("这里因为 "),a("code",[t._v("lint-staged")]),t._v(" 会把提交的文件作为参数传给 "),a("code",[t._v("tsc")]),t._v(" 命令，实际执行的命令是 "),a("code",[t._v("tsc xxx.ts -p tsconfig.json --noEmit --skipLibCheck")]),t._v("，所以就会出现又要加载 "),a("code",[t._v("tsconfig.json")]),t._v(" 编译 "),a("code",[t._v("include")]),t._v(" 的 TS 文件，又要单独编译 "),a("code",[t._v("**/*.ts")]),t._v(" 的文件，"),a("code",[t._v("tsc")]),t._v(" 就蒙圈了。")])]),t._v(" "),a("p",[t._v("这个问题也在 "),a("code",[t._v("lint-staged")]),t._v(" 的 "),a("a",{attrs:{href:"https://github.com/microsoft/TypeScript/issues/27379",title:"lint-staged 中使用 tsc 的问题",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个 Issue: Allow tsconfig.json when input files are specified"),a("OutboundLink")],1),t._v(" 中有提到。里面对如何解决这样的冲突讨论的非常激烈。其中有一位大哥想了一个方法："),a("strong",[t._v("我把 tsconfig.json 的 JSON 拿出来，再把里面的 key-value 对转化成 --xxx 的 bash 参数不就算加载了 tsconfig.json 了么？最后，他造了一个轮子 "),a("a",{attrs:{href:"https://github.com/gustavopch/tsc-files#readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("tsc-files"),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"tsc-files-的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tsc-files-的问题"}},[t._v("#")]),t._v(" tsc-files 的问题")]),t._v(" "),a("p",[t._v("然而问题依然存在，因为我们一般在 "),a("code",[t._v("tsconfig.json")]),t._v(" 里都会把 "),a("code",[t._v("src")]),t._v(" 放在 "),a("code",[t._v("include")]),t._v(" 里：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"include"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exclude"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("这样一来，运行 "),a("code",[t._v("tsc-files --noEmit")]),t._v(" 就会扫描整个 "),a("code",[t._v("src")]),t._v(" 的 "),a("code",[t._v(".ts")]),t._v(" 文件，无法达到 "),a("code",[t._v("lint-staged")]),t._v(" 的目的了。")])]),t._v(" "),a("p",[t._v("所以 "),a("code",[t._v("tsc-files")]),t._v(" 在 "),a("code",[t._v("v1.1.3")]),t._v(" 这个版本会把 "),a("code",[t._v("include")]),t._v(" 设置成空数组 "),a("code",[t._v("[]")]),t._v("，然后把 "),a("code",[t._v("lint-staged")]),t._v(" 的文件放在 "),a("code",[t._v('files: ["xxx.ts"]')]),t._v("。")]),t._v(" "),a("p",[t._v("但是这又回到刚刚无法检测 "),a("code",[t._v("messyTypes.d.ts")]),t._v(" 里 "),a("code",[t._v("Hello")]),t._v(" interface 的问题，因为 "),a("code",[t._v("messyTypes.d.ts")]),t._v(" 没有被放到 "),a("code",[t._v("files")]),t._v(" 中：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/621ffad6e2ba4bd2ac838c94db9de295~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),t._v(" "),a("p",[t._v("这个问题在 "),a("a",{attrs:{href:"https://github.com/gustavopch/tsc-files/issues/20",title:"tsc-files 问题",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个 Issue: Current version incorrectly analyzes @types/node"),a("OutboundLink")],1),t._v(" 中又又又被疯狂讨论。\n里面提出了一个想法：把 "),a("code",[t._v("typeRoots")]),t._v(" 的路径放到 "),a("code",[t._v("include")]),t._v(" 里，这样就可以用 "),a("code",[t._v("typeRoots")]),t._v(" 自定义类型声明文件的路径来检测所有的 "),a("code",[t._v(".d.ts")]),t._v(" 了，但是这还是有问题，具体看下面这段：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ce4a6418679b46e8885ecf301d6606c4~tplv-k3u1fbpfcp-zoom-1.image",alt:"这两段是该 Issue 的讨论核心"}})]),t._v(" "),a("blockquote",[a("p",[t._v("deanolium 的观点是：如果把 "),a("code",[t._v("typeRoots")]),t._v(" 放在 "),a("code",[t._v("include")]),t._v(" 里，我们不能保证所有人都会用 "),a("code",[t._v("tsconfig.json")]),t._v(" 里的 "),a("code",[t._v("typeRoots")]),t._v("，因为不是所有人都是配置大神。\n如果要在 "),a("code",[t._v("typeRoots")]),t._v(" 里写自定义类型声明文件目录，那就要手动加上 "),a("code",[t._v("./node_modules/@types")]),t._v(" 目录，不然不会自动 import node_modules 里的 "),a("code",[t._v(".d.ts")]),t._v("。\n而且如果大家不了解 "),a("code",[t._v("tsc-files")]),t._v(" 的原理和实现，根本就不知道有这个坑。"),a("code",[t._v("tsc-files")]),t._v(" 升级版本后还需要用户手动去改 "),a("code",[t._v("tsconfig.json")]),t._v(" 并不是一个好的实践。")])]),t._v(" "),a("blockquote",[a("p",[t._v("gustavopch（作者）的观点是：一方面使用 "),a("code",[t._v("tsc-files")]),t._v(" 时不应该加上所有的文件，因为这会扫描整个项目，就违反 "),a("code",[t._v("lint-staged")]),t._v(" 使用的初衷了。\n另一方面就算 "),a("code",[t._v("include")]),t._v(" 里能读取 "),a("code",[t._v("typeRoots")]),t._v(" 目录也不能保证能自动检测到所有类型，因为有的人可能会在 "),a("code",[t._v(".ts")]),t._v(" 也用 "),a("code",[t._v("declare")]),t._v(" 来定义，也会有坑。")])]),t._v(" "),a("p",[t._v("累了，毁灭吧。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ac607546a8664c3cb4d6353963209f11~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"我的方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的方案"}},[t._v("#")]),t._v(" 我的方案")]),t._v(" "),a("p",[t._v("总的来说，要么扫描 "),a("code",[t._v("src")]),t._v(" 里的所有 "),a("code",[t._v(".ts")]),t._v(" 做类型检查，要么只扫描 Git 提交的文件，但是会报找不到类型的错误。")]),t._v(" "),a("p",[t._v("很抱歉，目前我能找到的资料都没有很好的解决方案，如果你有更好的 LintStaged x TypeScript 配置方案，可以 "),a("a",{attrs:{href:"https://github.com/haixiangyan/linter-tutorial/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("提 Issue"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("不过我自己也想到了一个方法就是显式扫描 "),a("code",[t._v(".d.ts")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" declarationFiles "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/messyTypesInfo.d.ts'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'**/*.{ts,tsx}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("filenames")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("filenames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("declarationFiles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("tsc-files ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" --noEmit --skipLibCheck")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'**/*.{js,jsx}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.vue"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.{css,less}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("或者用 "),a("code",[t._v("fs")]),t._v(" 模块来读取项目中 "),a("code",[t._v("./src/typings")]),t._v(" 下的所有 "),a("code",[t._v(".d.ts")]),t._v(" 声明文件，然后再放到命令中。")]),t._v(" "),a("p",[t._v("要么也可以在每次 Commit 前全面扫描：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.{ts,tsx}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsc -p tsconfig.json --noEmit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.{js,jsx}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.vue"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.{css,less}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("缺点是 pre-commit 的时候会慢一点。")])])}),[],!1,null,null,null);s.default=e.exports}}]);