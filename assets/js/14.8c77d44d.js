(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{415:function(t,s,a){"use strict";a.r(s);var e=a(35),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"🐶-husky-x-lintstaged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🐶-husky-x-lintstaged"}},[t._v("#")]),t._v(" 🐶 Husky x LintStaged")]),t._v(" "),a("p",[t._v("上一章说到我们不能保证所有人提交的代码都是 fix 好的。\n比如有的人经常忘记开启 ESLint 插件，提交代码时还以为自己代码写的贼 6，没啥报错，但到队友那 "),a("code",[t._v("git pull")]),t._v(" 满屏都是红的。\n所以，更好的做法是在代码入库（Commit 和 Push）的时候可以做一次 ESLint 的检查。")]),t._v(" "),a("p",[t._v("正好 Git 提供了很多 "),a("a",{attrs:{href:"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Hooks"),a("OutboundLink")],1),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("pre-commit: 提交代码前做一些事")]),t._v(" "),a("li",[t._v("pre-push: 推代码前做一些事")]),t._v(" "),a("li",[t._v("pre-merge: 合并代码前做一些事")]),t._v(" "),a("li",[t._v("pre-rebase: rebase 前做一些事")]),t._v(" "),a("li",[t._v("...")])]),t._v(" "),a("p",[t._v("这些 Hooks 可以使得我们在操作 Git 的某些阶段做一些事情。 "),a("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("Husky"),a("OutboundLink")],1),t._v(" 可以在这些 Git Hooks 回调时执行我们定义好的 Bash 脚本。\n如果我们把 ESLint 的修复命令放在这些的 Bash 脚本中，那就可以实现 Git Commit/Push/Merge/... 前的 ESLint 自动修复了！")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ff5840b7cace468e975505b05bf24cf6~tplv-k3u1fbpfcp-zoom-1.image",alt:""}}),t._v(")")]),t._v(" "),a("p",[a("strong",[t._v("注意：Husky v4 和 v7 有非常大的差异，大家一定要注意甄别，最好直接看官网，这里使用最新版跟大家讲解。")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装哈士奇")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" husky -D\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加 prepare 命令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" set-script prepare "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky install"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# prepare 创建 bash 脚本，安装 git hooks")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run prepare\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加 pre-commit 的 git hook 脚本")]),t._v("\nnpx husky "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" .husky/pre-commit "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npx eslint src --fix"')]),t._v("\n")])])]),a("p",[t._v("运行之后会发现在 "),a("code",[t._v("./.husky/pre-commit")]),t._v(" 里看到 "),a("code",[t._v("git commit")]),t._v(" 前会运行的脚本：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('/_/husky.sh"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git commit 前先 eslint fix 一波")]),t._v("\nnpx eslint src --fix\n")])])]),a("p",[a("strong",[t._v("但是这样的命令会让每次 commit 前都把整个 "),a("code",[t._v("src")]),t._v(" 都扫描并 fix 一次，速度太慢了，而且很容易把别人的屎山也 fix 掉，然后提交上去。")])]),t._v(" "),a("p",[t._v("我们更希望只针对提交的文件进行 Lint 操作。")]),t._v(" "),a("h2",{attrs:{id:"lintstaged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lintstaged"}},[t._v("#")]),t._v(" LintStaged")]),t._v(" "),a("p",[t._v("Prettier 在 "),a("a",{attrs:{href:"https://prettier.io/docs/en/precommit.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档的 Pre-commit Hook"),a("OutboundLink")],1),t._v(" 已经介绍了很多只针对提交文件做 fix 的工具。这里以 "),a("a",{attrs:{href:"https://github.com/okonet/lint-staged",target:"_blank",rel:"noopener noreferrer"}},[t._v("lint-staged"),a("OutboundLink")],1),t._v(" 做介绍。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D lint-staged\n")])])]),a("p",[t._v("然后添加 "),a("code",[t._v(".lintstagedrc.js")]),t._v(" 配置文件，里面对提交不同的文件进行 "),a("code",[t._v("eslint --fix")]),t._v(" 操作。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'**/*.{ts,tsx,js,jsx}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.vue"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.{css,less}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("lint-staged")]),t._v(" 配置的含义是对提交上来不同类型的文件执行对应的 lint fix 命令。")]),t._v(" "),a("p",[t._v("最后在刚刚创建的 "),a("code",[t._v("./.husky/pre-commit")]),t._v(" 里改成执行 "),a("code",[t._v("lint-staged")]),t._v(" 命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('/_/husky.sh"')]),t._v("\n\nnpx lint-staged\n")])])]),a("p",[t._v("以后每次 commit 前都会跑一次 "),a("code",[t._v("lint-staged")]),t._v("，而 "),a("code",[t._v("lint-staged")]),t._v(" 又会对提交的文件进行 ESLint Fix。")]),t._v(" "),a("h2",{attrs:{id:"命令行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行"}},[t._v("#")]),t._v(" 命令行")]),t._v(" "),a("p",[t._v("如果细心的同学会发现上面提到关于 "),a("code",[t._v("eslint")]),t._v(" 的自动修复命令一共有两条："),a("code",[t._v("eslint src --fix")]),t._v(" 以及 "),a("code",[t._v("eslint --cache --fix")]),t._v("。")]),t._v(" "),a("p",[t._v("如果你直接在命令行里跑 "),a("code",[t._v("eslint --fix")]),t._v("，那什么事都不会发生，因为你没有指定要 fix 的文件以及文件目录。")]),t._v(" "),a("p",[t._v("那为什么在 "),a("code",[t._v("lint-staged")]),t._v(" 里就可以 "),a("code",[t._v("eslint --cache --fix")]),t._v(" 呢？")]),t._v(" "),a("p",[a("strong",[t._v("因为 "),a("code",[t._v("lint-staged")]),t._v(" 会把前面的 "),a("code",[t._v("*.{js,jsx,ts,tsx}")]),t._v(" 来匹配提交的文件，并把它们作为参数传到 "),a("code",[t._v("eslint --cache --fix")]),t._v(" 后面。所以虽然写的是 "),a("code",[t._v("eslint --cache --fix")]),t._v(" 时实际上是执行了 "),a("code",[t._v("eslint 要修复的文件 --cache --fix")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"性能问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能问题"}},[t._v("#")]),t._v(" 性能问题")]),t._v(" "),a("p",[t._v("或许有的同学会发现每次 "),a("code",[t._v("eslint --fix")]),t._v(" 的时候跑的有点慢，如果你在前面加一个 "),a("code",[t._v("TIMING=1")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TIMING")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" eslint src --fix\n")])])]),a("p",[t._v("就可以看到哪个规则跑了多久：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("Rule                                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Time "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Relative\n:---------------------------------------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("----------:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("--------:\nprettier/prettier                       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("207.532")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("79.8")]),t._v("%\n@typescript-eslint/no-unused-vars       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.738")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.9")]),t._v("%\n@typescript-eslint/no-floating-promises "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.053")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),t._v("%\n@typescript-eslint/no-unsafe-assignment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.509")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.9")]),t._v("%\nvue/attributes-order                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.424")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.9")]),t._v("%\nno-unused-vars                          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.977")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),t._v("%\nno-redeclare                            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.539")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.6")]),t._v("%\nreact/display-name                      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.219")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v("%\nno-global-assign                        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.873")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v("%\n@typescript-eslint/no-unsafe-argument   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.795")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v("%\n")])])]),a("p",[t._v("毕竟 "),a("code",[t._v("prettier/prettier")]),t._v(" 是一大堆的 Prettier 代码风格规则，所以肯定是跑得慢的。\n当然也有很多人会很在意这个点，所以也有了 "),a("a",{attrs:{href:"https://github.com/prettier/eslint-plugin-prettier/issues/304",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个 Issue"),a("OutboundLink")],1),t._v(" 。")]),t._v(" "),a("p",[t._v("不过这个 Issue 也没能给出太好的解决方案，如果你有更好的方案可以 "),a("a",{attrs:{href:"https://github.com/haixiangyan/linter-tutorial/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("在这里提 Issue"),a("OutboundLink")],1),t._v(" 。")]),t._v(" "),a("h2",{attrs:{id:"lintstaged-x-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lintstaged-x-typescript"}},[t._v("#")]),t._v(" LintStaged x TypeScript")]),t._v(" "),a("p",[t._v("你以为到这就完了么？Too yong too simple！如果你在 "),a("code",[t._v(".d.ts")]),t._v(" 定义一个 "),a("code",[t._v("interface")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("然后在另一个 "),a("code",[t._v(".ts")]),t._v(" 里错误地使用它：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：这里没有 import Hello 是正常的，因为 Hello 是在 .d.ts 里定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hello"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Hello "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb095ca82e004f1e8320fdb68d3e0202~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("然后直接强行 "),a("code",[t._v("git add ./")]),t._v(", "),a("code",[t._v("git commit -m 'update'")]),t._v("，发现竟然可以直接通过而不报错！")])]),t._v(" "),a("p",[t._v("不报错的原因是因为："),a("strong",[t._v("ESLint 本身就不会做类型校验（Type Check）。")]),t._v(" 理由如下（具体可见 "),a("a",{attrs:{href:"https://github.com/typescript-eslint/typescript-eslint/issues/1037#issuecomment-537608227",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个 Issue"),a("OutboundLink")],1),t._v("）：")]),t._v(" "),a("ul",[a("li",[t._v("ESLint 只是作为 TypeScript Type Checking 的补充，只做 Type Checking 之外的一些工作")]),t._v(" "),a("li",[t._v("大多数人用 TS 的 Parser，但是不用 "),a("code",[t._v("parserOptions.project")]),t._v("，所以这种情况下也不能 Type Check")]),t._v(" "),a("li",[t._v("和 TypeScript 相对完整的错误校验上报体系相比，ESLint 只完成了一半的工作")])]),t._v(" "),a("p",[t._v("总的来说就是你用 "),a("code",[t._v("tsc --noEmit")]),t._v(" 就能做类型检查，ESLint 就不用再重复造一次轮子了，再看看隔离 Babel 大哥，它就是转译器，它也不做 TS 的语法校验呀，还是一个工作做一件事的好。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4cde3523baf49e5a5260d18f714d585~tplv-k3u1fbpfcp-zoom-1.image",alt:"ESLint 和 TypeScript 依然是各论各的"}})]),t._v(" "),a("p",[t._v("有些同学估计都会抢答了：我知道我知道，直接在 "),a("code",[t._v(".lintstagedrc.js")]),t._v(" 里添加一行 "),a("code",[t._v("tsc")]),t._v(" 不就完事了？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'**/*.{ts,tsx}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查 TypeScript")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'**/*.{js,jsx}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.vue"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"**/*.{css,less}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("年轻人，依然 Too young too naive！让我们走进下一章，看看 "),a("code",[t._v("tsc")]),t._v(" 会给我们带来什么样的难题吧。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);